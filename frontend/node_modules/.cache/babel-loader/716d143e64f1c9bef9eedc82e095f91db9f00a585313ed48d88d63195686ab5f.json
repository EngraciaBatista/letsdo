{"ast":null,"code":"const BASE_URL = 'http://localhost:5000/api/tasks';\nexport const getTasks = async () => {\n  const response = await fetch(BASE_URL);\n  if (!response.ok) throw new Error('Failed to fetch tasks');\n  return response.json();\n};\nexport const createTask = async task => {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  });\n  if (!response.ok) throw new Error('Failed to create task');\n  return response.json();\n};\nexport const updateTask = async (id, updatedTask) => {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedTask)\n  });\n  if (!response.ok) throw new Error('Failed to update task');\n  return response.json();\n};\nexport const deleteTask = async id => {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error('Failed to delete task');\n  return response.json();\n};","map":{"version":3,"names":["BASE_URL","getTasks","response","fetch","ok","Error","json","createTask","task","method","headers","body","JSON","stringify","updateTask","id","updatedTask","deleteTask"],"sources":["C:/Users/engra/OneDrive/Desktop/LetsDo-app/letsdo/frontend/src/services/taskService.js"],"sourcesContent":["const BASE_URL = 'http://localhost:5000/api/tasks';\r\n\r\nexport const getTasks = async () => {\r\n  const response = await fetch(BASE_URL);\r\n  if (!response.ok) throw new Error('Failed to fetch tasks');\r\n  return response.json();\r\n};\r\n\r\nexport const createTask = async (task) => {\r\n  const response = await fetch(BASE_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(task),\r\n  });\r\n  if (!response.ok) throw new Error('Failed to create task');\r\n  return response.json();\r\n};\r\n\r\nexport const updateTask = async (id, updatedTask) => {\r\n  const response = await fetch(`${BASE_URL}/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(updatedTask),\r\n  });\r\n  if (!response.ok) throw new Error('Failed to update task');\r\n  return response.json();\r\n};\r\n\r\nexport const deleteTask = async (id) => {\r\n  const response = await fetch(`${BASE_URL}/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  if (!response.ok) throw new Error('Failed to delete task');\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;EACtC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;IACrCS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;EACnD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIe,EAAE,EAAE,EAAE;IAChDN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,WAAW;EAClC,CAAC,CAAC;EACF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMW,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIe,EAAE,EAAE,EAAE;IAChDN,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}